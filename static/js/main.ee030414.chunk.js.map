{"version":3,"sources":["components/ChipSelect.js","components/Confirm.js","containers/Dashboard.js","containers/Patients.js","containers/Providers.js","containers/Provider.js","components/Header.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","dropDown","associations","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ChipSelect","props","useTheme","setAssociations","page","handleChange","event","value","target","split","handleDelete","e","preventDefault","current","filter","element","id","FormControl","sx","m","InputLabel","Select","labelId","multiple","onChange","input","OutlinedInput","label","renderValue","selected","Box","display","flexWrap","gap","map","Chip","last_name","first_name","clickable","deleteIcon","onMouseDown","stopPropagation","onDelete","data","MenuItem","name","Confirm","onClose","open","action","rowData","setRows","useState","record","setRecord","lowerCase","string","charAt","toLowerCase","slice","handleClose","useEffect","hospitals","indexes","forEach","push","includes","providers","Dialog","DialogTitle","Card","minWidth","CardContent","Typography","fontSize","color","gutterBottom","mb","mrn","CardActions","Button","onClick","fetch","BASE_URL","method","headers","then","res","json","TextField","config","body","JSON","stringify","editRecord","MuiVirtualizedTable","getRowClassName","index","classes","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","component","className","tableCell","flexContainerList","noClick","variant","height","align","numeric","provider","to","headerRenderer","headerHeight","this","tableProps","gridStyle","direction","table","rowClassName","dataKey","other","headerProps","React","PureComponent","defaultProps","defaultTheme","createTheme","VirtualizedTable","withStyles","alignItems","boxSizing","overflow","flexDirection","paddingLeft","paddingRight","undefined","cursor","backgroundColor","palette","grey","flex","Patients","rows","setOpen","patients","Paper","rowCount","length","rowGetter","setProviders","sort","a","b","ReactVirtualizedTable","setHospitals","useStyles","makeStyles","showContainer","position","Provider","useParams","setProvider","console","log","Header","setPage","location","useLocation","pathname","flexGrow","AppBar","Toolbar","IconButton","size","edge","aria-label","mr","Navbar","stickToBottom","bottom","BottomNavigation","newValue","setValue","showLabels","BottomNavigationAction","Link","icon","App","isBusy","Grid","container","justifyContent","type","visible","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee030414.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\n\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nfunction getStyles(dropDown, associations, theme) {\n  return {\n    fontWeight:\n      associations.indexOf(dropDown) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function ChipSelect(props) {\n  const theme = useTheme();\n  const { dropDown, associations, setAssociations, page }= props\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setAssociations(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  const handleDelete = (e, value) => {\n    e.preventDefault();\n    setAssociations((current) => current.filter((element) => element.id !== value.id))\n  };\n  if (page === \"Patient\") {\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">Providers</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          value={associations}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Providers\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value.id} label={`${value.last_name}, ${value.first_name}`}\n                    clickable\n                    deleteIcon={\n                      <CancelIcon\n                        onMouseDown={(event) => event.stopPropagation()}\n                      />\n                    }\n                    onDelete={(e) => handleDelete(e, value)}\n                    />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {dropDown.map((data) => (\n\n            <MenuItem\n              key={data.id}\n              value={data}\n              style={getStyles(dropDown, associations, theme)}\n            >\n              {data.last_name}, {data.first_name}\n            </MenuItem>\n      \n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  )}\n  else {\n    return (\n      <div>\n        <FormControl sx={{ m: 1, width: 300 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Hospitals</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={associations}\n            onChange={handleChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Hospitals\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value.name} label={value.name} \n                      clickable\n                      deleteIcon={\n                        <CancelIcon\n                          onMouseDown={(event) => event.stopPropagation()}\n                        />\n                      }\n                      onDelete={(e) => handleDelete(e, value)}\n                      />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {dropDown.map((data) => (\n              <MenuItem\n                key={data.name}\n                value={data}\n                style={getStyles(dropDown, associations, theme)}\n              >\n                {data.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    )\n  }\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\n\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport TextField from '@mui/material/TextField';\n\nimport ChipSelect from './ChipSelect'\n\nimport { BASE_URL } from '../App'\n\nexport default function Confirm(props) {\n  const { onClose, open, action, rowData, setRows, page, dropDown } = props;\n  const [ record, setRecord ] = useState({})\n\n  const [associations, setAssociations] = useState([])\n\n  function lowerCase(string) {\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  }\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleChange = (event) => {\n    let { name, value } = event.target;\n      setRecord({...record, [name]:value })\n  };\n\n\n  const deleteRecord = (id) => {\n    let config = {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        },\n    }\n\n      fetch(BASE_URL+`${lowerCase(page)}s/${id}`, config)\n      .then(res => res.json())\n      .then(res => {\n          setRows(res[lowerCase(page)+\"s\"])\n          handleClose()\n      })\n    }\n\n    const editRecord = (id, action) => {\n        let config\n        if (action === \"Edit\") {\n                config = {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                },\n                body: JSON.stringify( { record: record, associations: associations})  \n            }\n            fetch(BASE_URL+`${lowerCase(page)}s/${id}`, config)\n            .then(res => res.json())\n            .then(res => {\n              setRows(res[lowerCase(page)+\"s\"])\n              handleClose()\n            })\n        }\n        else {\n            config = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                },\n                body: JSON.stringify( { record: record, associations: associations})  \n\n            }\n            fetch(BASE_URL+`${lowerCase(page)}s`, config)\n            .then(res => res.json())\n            .then(res => {\n              setRows(res[lowerCase(page)+\"s\"])\n              handleClose()\n            })\n        }\n        }\n\n\n     useEffect(()=> {\n        if (rowData) {\n          if (rowData.hospitals){\n            let indexes = []\n            rowData.hospitals.forEach(element => indexes.push(element.id))\n            let selected = dropDown.filter(element => indexes.includes(element.id))\n            setAssociations(selected)\n          }\n          else if (rowData.providers){\n            let indexes = []\n            rowData.providers.forEach(element => indexes.push(element.id))\n            let selected = dropDown.filter(element => indexes.includes(element.id))\n            setAssociations(selected)\n          }\n          else {\n            setAssociations([])\n          }\n        setRecord({...rowData})\n        }\n    }, [rowData, dropDown])\n\n\n  if (action === \"Delete\"){\n      return (\n        <Dialog onClose={handleClose} open={open}>     \n            <DialogTitle>Confirm Delete</DialogTitle>\n                <Card sx={{ minWidth: 275 }}>\n                    <CardContent>\n                        <Typography sx={{ fontSize: 18 }} color=\"text.secondary\" gutterBottom>\n                        {rowData.last_name}, {rowData.first_name}\n                        </Typography>\n                        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                        {rowData.mrn}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button onClick= {() => deleteRecord(rowData.id)}>Delete</Button>\n                        <Button onClick= {() => handleClose()}>Cancel</Button>                    </CardActions>\n                    </Card>\n        </Dialog>\n      )\n  }\n  else if (action === \"Edit\" || action === \"Create\"){\n    return (\n      <Dialog onClose={handleClose} open={open}>     \n          <DialogTitle>{action === \"Edit\" ? \"Edit\" : \"Add\"} {page}</DialogTitle>\n              <Card sx={{ minWidth: 275 }}>\n                  <CardContent>\n                    <TextField\n                            id=\"last_name\"\n                            name=\"last_name\"\n                            label=\"Last Name\"\n                            value={record.last_name}\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            id=\"first_name\"\n                            name=\"first_name\"\n                            label=\"First Name\"\n                            value={record.first_name}\n                            onChange={handleChange}\n\n                        />\n                        {page === \"Patient\" ? \n                         <TextField\n                            id=\"mrn\"\n                            name=\"mrn\"\n                            label=\"MRN\"\n                            value={record.mrn}\n                            onChange={handleChange}\n                        />\n                        : null}\n                        <ChipSelect page={page} setAssociations={setAssociations} associations={associations} dropDown={dropDown}></ChipSelect>\n\n                  </CardContent>\n                  <CardActions>\n                      <Button onClick= {() => editRecord(rowData.id, action)}>Save</Button>\n                      <Button onClick= {() => handleClose()}>Cancel</Button>\n                  </CardActions>\n                  </Card>\n      </Dialog>\n    )  \n    }\n    else {\n        return null\n    }\n}\n\nConfirm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport TableCell from '@mui/material/TableCell';\nimport Paper from '@mui/material/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\n\nimport Confirm from '../components/Confirm'\n\nimport { BASE_URL } from '../App'\nimport { Typography } from '@mui/material';\n\n\nconst styles = (theme) => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n\n  },\n  flexContainerList: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    overflow: \"scroll\",\n    flexDirection: \"column\"\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      ...(theme.direction === 'rtl' && {\n        paddingLeft: '0 !important',\n      }),\n      ...(theme.direction !== 'rtl' && {\n        paddingRight: undefined,\n      }),\n    },\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 72,\n  };\n\n\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick == null,\n    });\n  };\n\n  cellRenderer = ({ cellData, rowData, columnIndex }) => {\n\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    if (columnIndex === 4) {\n        return (\n          <TableCell\n            component=\"div\"\n            className={clsx(classes.tableCell, classes.flexContainerList, {\n              [classes.noClick]: onRowClick == null,\n            })}\n            variant=\"body\"\n            style={{ height: rowHeight }}\n            align={\n              (columnIndex != null && columns[columnIndex].numeric) || false\n                ? 'right'\n                : 'left'\n            }\n          >\n            {cellData.map((provider) => {\n                if (provider.id) {\n                return (\n                  <Link to={`/providers/${provider.id}`}>\n                    <Typography key={provider.id}>{provider.last_name}, {provider.first_name}</Typography>\n                  </Link>\n\n                )\n                }\n                else {\n                  return (\n                    <Typography key=\"empty\">---</Typography>\n                  )\n                }\n            })}\n        </TableCell>\n        )\n    }\n    else {\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? 'right'\n            : 'left'\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n    }\n  };\n\n  headerRenderer = ({ label }) => {\n    const { headerHeight, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: 'inherit',\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={(headerProps) =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string,\n      label: PropTypes.string,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n};\n\nconst defaultTheme = createTheme();\nconst VirtualizedTable = withStyles(styles, { defaultTheme })(MuiVirtualizedTable);\n\nexport default function Patients(props) {\n    const [rows, setRows] = useState([])\n    const [open, setOpen] = useState({open: false, action: \"\"})\n    const [providers, setProviders] = useState([])\n\n    const { page } = props\n\n      const handleClose = () => {\n        setOpen({...open, open: false});\n      };\n\n\n    useEffect(()=> {\n        let config = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n        }\n    \n          fetch(BASE_URL+\"patients\", config)\n          .then(res => res.json())\n          .then(res => {\n                setRows(res.patients)\n          })\n      }, [])\n\n  return (\n    <Box>\n    <Paper style={{ height: 600, width: '100%' }}>\n      <VirtualizedTable\n        setRows= {setRows}\n        setOpen= {setOpen}\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n          {\n            width: 100,\n            label: 'ID',\n            dataKey: 'id',\n          },\n          {\n            width: 250,\n            label: 'Last Name',\n            dataKey: 'last_name',\n          },\n          {\n            width: 250,\n            label: 'First Name',\n            dataKey: 'first_name',\n          },\n          {\n            width: 200,\n            label: 'MRN',\n            dataKey: 'mrn',\n          },\n          {\n            dataKey: 'providers',\n            label: 'Proivder(s)',\n            width: 200,\n\n          },\n        ]}\n      />\n    </Paper>\n    <Button onClick={() => {setOpen({open: true,\n                                    action: \"Create\",\n                                    rowData: {id: \"\", \n                                            first_name:\"\",\n                                            mrn: \"\",\n                                            last_name: \"\"}\n                                    })}}\n        >\n        Add {page}\n    </Button>\n    <Confirm\n        open={open.open}\n        action= {open.action}\n        rowData= {open.rowData}\n        onClose={handleClose}\n        setRows= {setRows}\n        page= {page}\n        dropDown= {providers}\n    />\n    </Box>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport TableCell from '@mui/material/TableCell';\nimport Paper from '@mui/material/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\n\nimport Confirm from '../components/Confirm'\n\nimport { BASE_URL } from '../App'\n\n\nconst styles = (theme) => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      ...(theme.direction === 'rtl' && {\n        paddingLeft: '0 !important',\n      }),\n      ...(theme.direction !== 'rtl' && {\n        paddingRight: undefined,\n      }),\n    },\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48,\n  };\n\n  \n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick == null,\n    });\n  };\n\n  cellRenderer = ({ cellData, rowData, columnIndex }) => {\n    \n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    if (columnIndex === 4) {\n        return (\n            <Box>\n                <Button onClick = {(e) => this.props.setOpen({ open: true, action: \"Edit\", rowData: rowData})}>\n                    Edit\n                </Button>\n                <Button onClick = {(e) => this.props.setOpen({ open: true, action: \"Delete\", rowData: rowData})}>\n                    Delete\n                </Button>\n            </Box>\n        )\n    }\n    else {\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? 'right'\n            : 'left'\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n    }\n  };\n\n  headerRenderer = ({ label }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: 'inherit',\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={(headerProps) =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string,\n      label: PropTypes.string,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n};\n\nconst defaultTheme = createTheme();\nconst VirtualizedTable = withStyles(styles, { defaultTheme })(MuiVirtualizedTable);\n\nexport default function Patients(props) {\n    const [rows, setRows] = useState([])\n    const [open, setOpen] = useState({open: false, action: \"\"})\n    const [providers, setProviders] = useState([])\n    \n\n    const { page } = props\n\n      const handleClose = () => {\n        setOpen({...open, open: false});\n      };\n\n\n    useEffect(()=> {\n        let config = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n        }\n    \n          fetch(BASE_URL+\"patients\", config)\n          .then(res => res.json())\n          .then(res => {\n                setRows(res.patients)\n          })\n\n          fetch(BASE_URL+\"providers\", config)\n          .then(res => res.json())\n          .then(res => {\n            res.providers.sort((a,b) => (a.last_name > b.last_name) ? 1 : ((b.last_name > a.last_name) ? -1 : 0))\n                setProviders(res.providers)\n          })\n      }, [])\n\n  return (\n    <Box>\n    <Paper style={{ height: 600, width: '100%' }}>\n      <VirtualizedTable\n        setRows= {setRows}\n        setOpen= {setOpen}\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n          {\n            width: 100,\n            label: 'ID',\n            dataKey: 'id',\n          },\n          {\n            width: 250,\n            label: 'Last Name',\n            dataKey: 'last_name',\n          },\n          {\n            width: 250,\n            label: 'First Name',\n            dataKey: 'first_name',\n          },\n          {\n            width: 200,\n            label: 'MRN',\n            dataKey: 'mrn',\n          },\n          {\n            dataKey: 'action',\n            label: 'Actions',\n            width: 200,\n\n          },\n        ]}\n      />\n    </Paper>\n    <Button onClick={() => {setOpen({open: true,\n                                    action: \"Create\",\n                                    rowData: {id: \"\", \n                                            first_name:\"\",\n                                            mrn: \"\",\n                                            last_name: \"\"}\n                                    })\n                                  }\n                                }\n        >\n        Add {page}\n    </Button>\n    <Confirm\n        open={open.open}\n        action= {open.action}\n        rowData= {open.rowData}\n        onClose={handleClose}\n        setRows= {setRows}\n        page= {page}\n        dropDown= {providers}\n    />\n    </Box>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport TableCell from '@mui/material/TableCell';\nimport Paper from '@mui/material/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\n\nimport Confirm from '../components/Confirm'\n\nimport { BASE_URL } from '../App'\n\n\nconst styles = (theme) => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      ...(theme.direction === 'rtl' && {\n        paddingLeft: '0 !important',\n      }),\n      ...(theme.direction !== 'rtl' && {\n        paddingRight: undefined,\n      }),\n    },\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48,\n  };\n\n\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick == null,\n    });\n  };\n\n  cellRenderer = ({ cellData, rowData, columnIndex }) => {\n\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    if (columnIndex === columns.length-1) {\n        return (\n            <Box>\n                <Button onClick = {(e) => this.props.setOpen({ open: true, action: \"Edit\", rowData: rowData})}>\n                    Edit\n                </Button>\n                <Button onClick = {(e) => this.props.setOpen({ open: true, action: \"Delete\", rowData: rowData})}>\n                    Delete\n                </Button>\n            </Box>\n        )\n    }\n    else {\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? 'right'\n            : 'left'\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n    }\n  };\n\n  headerRenderer = ({ label }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: 'inherit',\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={(headerProps) =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string,\n      label: PropTypes.string,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number,\n};\n\nconst defaultTheme = createTheme();\nconst VirtualizedTable = withStyles(styles, { defaultTheme })(MuiVirtualizedTable);\n\nexport default function ReactVirtualizedTable(props) {\n    const [rows, setRows] = useState([])\n    const [hospitals, setHospitals] = useState([])\n    const [open, setOpen] = useState({open: false, action: \"\"})\n    const { page } = props\n\n    \n      const handleClose = () => {\n        setOpen({...open, open: false});\n      };\n\n\n    useEffect(()=> {\n        let config = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n        }\n    \n          fetch(BASE_URL+\"providers\", config)\n          .then(res => res.json())\n          .then(res => {\n\n                setRows(res.providers)\n          })\n\n          fetch(BASE_URL+\"hospitals\", config)\n          .then(res => res.json())\n          .then(res => {\n            res.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0))\n                setHospitals(res)\n          })\n      }, [])\n\n  return (\n    <Box>\n    <Paper style={{ height: 600 , width: '100%' }}>\n      <VirtualizedTable\n        setRows= {setRows}\n        setOpen= {setOpen}\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n          {\n            width: 100,\n            label: 'ID',\n            dataKey: 'id',\n          },\n          {\n            width: 250,\n            label: 'Last Name',\n            dataKey: 'last_name',\n          },\n          {\n            width: 250,\n            label: 'First Name',\n            dataKey: 'first_name',\n          },\n          {\n            width: 200,\n            label: '# Patients',\n            dataKey: 'count',\n          },\n          {\n            dataKey: 'action',\n            label: 'Actions',\n            width: 200,\n\n          },\n        ]}\n      />\n    </Paper>\n    <Button onClick={() => {setOpen({open: true,\n                                    action: \"Create\",\n                                    rowData: {id: \"\", \n                                            first_name:\"\",\n                                            mrn: \"\",\n                                            last_name: \"\"}\n                                    })}}\n        >\n        Add {page}\n    </Button>\n    <Confirm\n        open={open.open}\n        action= {open.action}\n        rowData= {open.rowData}\n        onClose={handleClose}\n        setRows= {setRows}\n        page={page}\n        dropDown={hospitals}\n    />\n    </Box>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport {\n  useParams,\n} from \"react-router-dom\";\nimport { makeStyles } from '@mui/styles';\n\nimport Button from '@mui/material/Button';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport TextField from '@mui/material/TextField';\n\nimport ChipSelect from '../components/ChipSelect'\nimport Confirm from '../components/Confirm'\n\nimport { BASE_URL } from '../App'\n\n\nconst useStyles = makeStyles((theme) => ({\nshowContainer:{\n  width: '100%',\n  height: 'calc(100% - 56px - 44px)',\n  overflow: 'hidden',\n  display: 'block',\n  position: 'relative'\n}\n}));\n\n\nfunction Provider() {\n    const { id } = useParams();\n    const classes = useStyles();\n    const [provider, setProvider]= useState(null);\n    const [associations, setAssociations] = useState([])\n    const [open, setOpen]= useState(false)\n    const [record, setRecord] = useState({})\n    const [hospitals, setHospitals] = useState([])\n\n    const handleChange = (event) => {\n        let { name, value } = event.target;\n          setRecord({...record, [name]:value })\n      };\n    \n    const editRecord = (id) => {\n            let config = {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                },\n                body: JSON.stringify( { record: record, associations: associations})  \n            }\n\n            fetch(BASE_URL+`providers/${id}`, config)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n            })\n        }\n        \n\n    useEffect(()=> {\n            let config = {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                },\n            }\n\n            fetch(BASE_URL+\"providers/\"+id, config)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n            setProvider(res.providers)\n            })\n    }, [id])\n    \n    if (provider) {\n        return (\n          <div className={classes.showContainer}>\n                <Card sx={{ minWidth: 275 }}>\n                  <CardContent>\n                    <TextField\n                            id=\"last_name\"\n                            name=\"last_name\"\n                            label=\"Last Name\"\n                            value={record.last_name}\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            id=\"first_name\"\n                            name=\"first_name\"\n                            label=\"First Name\"\n                            value={record.first_name}\n                            onChange={handleChange}\n\n                        />\n                        <ChipSelect page=\"Provider\" setAssociations={setAssociations} associations={associations} dropDown={hospitals}></ChipSelect>\n\n                  </CardContent>\n                  <CardActions>\n                      <Button onClick= {() => editRecord(provider.id)}>Save</Button>\n                      <Button onClick = {(e) => setOpen({ open: true, action: \"Delete\", rowData: provider})}>Delete</Button>\n                  </CardActions>\n                  </Card>\n                <Confirm/>\n          </div>\n          );\n        }\n          else {return null}\n  }\n\n  export default Provider","import React, { useEffect } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useLocation } from 'react-router-dom';\n\nexport default function Header(props) {\n    const { setPage, page } = props;\n    const location = useLocation()\n\n    useEffect(() => {\n        let path = location.pathname.split(\"/\")[1]\n        let value\n        switch(path) {\n          case \"providers\":\n            value = \"Provider\"\n            break;\n          case \"patients\":\n            value = \"Patient\"\n            break;\n          default:\n            value = \"Dashboard\"\n        }\n        setPage(value)\n          },[location.pathname, setPage])\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {page === \"Dashboard\" ? \"Dashboard\" : page + \"s\"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@mui/styles';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport PersonIcon from '@mui/icons-material/Person';\nimport HealthAndSafetyIcon from '@mui/icons-material/HealthAndSafety';\n\nfunction Navbar(props) {\n  const useStyles = makeStyles({\n    stickToBottom: {\n      width: '100%',\n      position: 'fixed',\n      bottom: 0,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <BottomNavigation\n      value={props.value}\n      onChange={(event, newValue) => {\n        props.setValue(newValue);\n      }}\n      showLabels\n      className={classes.stickToBottom}\n      \n    >\n      <BottomNavigationAction component={Link} to=\"/dashboard\" label=\"Dashboard\" value=\"Dashboard\"icon={<DashboardIcon />} />\n      <BottomNavigationAction component={Link} to=\"/patients\" label=\"Patients\" value=\"Patient\" icon={<PersonIcon />} />\n      <BottomNavigationAction component={Link} to=\"/providers\" label=\"Providers\" value=\"Provider\" icon={<HealthAndSafetyIcon />} />\n    </BottomNavigation>\n   \n\n  );\n}\n\nexport default Navbar\n\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import BottomNavigation from '@mui/material/BottomNavigation';\n// import BottomNavigationAction from '@mui/material/BottomNavigationAction';\n// import RestoreIcon from '@mui/icons-material/Restore';\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import LocationOnIcon from '@mui/icons-material/LocationOn';\n\n// export default function NavBar(props) {\n//   const [value, setValue] = React.useState(0);\n\n//   return (\n\n//       <BottomNavigation\n//         showLabels\n//         value={value}\n//         onChange={(event, newValue) => {\n//           setValue(newValue);\n//         }}\n//       >\n//         <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n//         <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n//         <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n//       </BottomNavigation>\n\n//   );\n// }","import './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport Dashboard from './containers/Dashboard';\nimport Patients from './containers/Patients'\nimport Providers from './containers/Providers'\nimport Provider from './containers/Provider'\n\n\nimport Header from './components/Header'\nimport Navbar from './components/Navbar'\n\nimport Loader from \"react-loader-spinner\";\nimport Grid from '@mui/material/Grid';\n\n\n\nexport const BASE_URL = \"http://localhost:3000/\";\n\nfunction App() {\n\n  const [page, setPage] = useState(\"Dashboard\")\n  const [isBusy, setBusy] = useState(false)\n\n\n  const renderLoad = () => {\n    if (isBusy) {\n      return (\n            <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{height: '100%'}}\n            >\n              <h2>Loading</h2>\n              <Loader\n                  type=\"TailSpin\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  visible={isBusy}\n                /> \n            </Grid>\n      )\n    } else {\n\n      return (\n        <HashRouter basename='/'>\n          <Header page={page} setPage={setPage}></Header>\n          <Navbar value={page} setValue={setPage} />\n          <Switch>\n            <Route path={['/dashboard', \"/\"]} exact>\n              <Dashboard/>\n            </Route>\n            <Route path='/patients'>\n              <Patients page={page}/>\n            </Route>\n            <Route path='/providers' exact>\n              <Providers page={page}/>\n            </Route>\n            <Route path='/providers/:id'>\n              <Provider page=\"Provider\"/>\n            </Route>\n          </Switch>\n        </HashRouter>\n      )\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        {renderLoad()}  \n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}